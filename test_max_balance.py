#!/usr/bin/env python3
"""
üß™ –¢–µ—Å—Ç —Ä–µ–∂–∏–º–∞ —Ç—Ä–∞—Ç –≤—Å–µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
"""

import asyncio
import sys
from pathlib import Path

sys.path.append(str(Path(__file__).parent))

from loguru import logger
from config.multi_wallet import MultiWalletConfig
from trading.jupiter import jupiter_trader


async def test_max_balance_mode():
    """–¢–µ—Å—Ç —Ä–µ–∂–∏–º–∞ —Ç—Ä–∞—Ç –≤—Å–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞"""
    logger.info("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ç—Ä–∞—Ç –≤—Å–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞")
    logger.info("=" * 60)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = MultiWalletConfig()

    if not config.is_enabled():
        logger.error("‚ùå –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã")
        logger.info("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ USE_MULTI_WALLET=true –≤ .env")
        return

    if not config.use_max_available_balance:
        logger.error("‚ùå –†–µ–∂–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –æ—Ç–∫–ª—é—á–µ–Ω")
        logger.info("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ USE_MAX_AVAILABLE_BALANCE=true –≤ .env")
        return

    logger.success("‚úÖ –†–µ–∂–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –≤–∫–ª—é—á–µ–Ω")

    # –ó–∞–ø—É—Å–∫–∞–µ–º Jupiter trader
    if not await jupiter_trader.start():
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Jupiter trader")
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å—ã
    if jupiter_trader.multi_wallet_manager:
        await jupiter_trader.multi_wallet_manager.update_all_balances()

        logger.info("üí∞ –ê–ù–ê–õ–ò–ó –ö–û–®–ï–õ–¨–ö–û–í:")

        for wallet in config.wallets:
            max_trade = config.get_max_trade_amount_for_wallet(wallet)
            logger.info(
                f"  {wallet.address[:8]}...: –±–∞–ª–∞–Ω—Å={wallet.balance_sol:.6f}, –¥–æ—Å—Ç—É–ø–Ω–æ={wallet.available_balance:.6f}, –ø–æ—Ç—Ä–∞—Ç–∏–º={max_trade:.6f}")

        # –¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞–Ω —Ç–æ—Ä–≥–æ–≤–ª–∏
        trade_plan = jupiter_trader.multi_wallet_manager._create_trade_plan(0, 0)

        logger.critical("üéØ –ü–õ–ê–ù –¢–û–†–ì–û–í–õ–ò:")
        total_will_spend = 0

        for wallet, amount in trade_plan:
            logger.critical(f"  –ö–æ—à–µ–ª–µ–∫ {wallet.address[:8]}...: –ø–æ—Ç—Ä–∞—Ç–∏–º {amount:.6f} SOL")
            total_will_spend += amount

        logger.critical(f"üíé –ò–¢–û–ì–û –ü–û–¢–†–ê–¢–ò–ú: {total_will_spend:.6f} SOL")

    else:
        logger.error("‚ùå Multi wallet manager –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

    await jupiter_trader.stop()


if __name__ == "__main__":
    asyncio.run(test_max_balance_mode())