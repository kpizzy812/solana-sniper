#!/usr/bin/env python3
"""
üîê –ö–æ–º–ø–∏–ª—è—Ç–æ—Ä –º–æ–¥—É–ª—è optimizer.py –≤ .pyc
–°–∫—Ä–∏–ø—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Å–∫—Ä—ã—Ç–∏—è –ª–æ–≥–∏–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
"""

import py_compile
import os
import shutil
import sys
from pathlib import Path


def compile_optimizer_to_pyc():
    """–ö–æ–º–ø–∏–ª—è—Ü–∏—è optimizer.py –≤ .pyc –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"""

    print("üîê –ö–û–ú–ü–ò–õ–Ø–¢–û–† OPTIMIZER MODULE")
    print("=" * 40)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è optimizer.py
    optimizer_path = Path("optimizer.py")
    if not optimizer_path.exists():
        print("‚ùå –§–∞–π–ª optimizer.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üí° –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ optimizer.py –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞")
        return False

    try:
        print("üì¶ –ö–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ optimizer.py –≤ –±–∞–π—Ç-–∫–æ–¥...")

        # –ö–æ–º–ø–∏–ª—è—Ü–∏—è –≤ .pyc
        py_compile.compile(
            file="optimizer.py",
            cfile="optimizer.pyc",
            doraise=True
        )

        print("‚úÖ –ö–æ–º–ø–∏–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!")

        # –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –∏—Å—Ö–æ–¥–Ω–∏–∫–∞
        backup_path = Path("optimizer.py.backup")
        shutil.copy2("optimizer.py", backup_path)
        print(f"üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {backup_path}")

        # –£–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        optimizer_path.unlink()
        print("üóëÔ∏è –ò—Å—Ö–æ–¥–Ω—ã–π optimizer.py —É–¥–∞–ª–µ–Ω")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–æ–¥—É–ª—è...")

        # –ò–º–ø–æ—Ä—Ç –∏ —Ç–µ—Å—Ç
        try:
            import optimizer
            print("‚úÖ –ú–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è")

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
            if hasattr(optimizer, 'run_system_optimization'):
                print("‚úÖ –§—É–Ω–∫—Ü–∏—è run_system_optimization –¥–æ—Å—Ç—É–ø–Ω–∞")
            else:
                print("‚ö†Ô∏è –§—É–Ω–∫—Ü–∏—è run_system_optimization –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

        except ImportError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
            return False

        print()
        print("üéâ –ö–û–ú–ü–ò–õ–Ø–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print()
        print("üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
        print(f"  ‚úÖ optimizer.pyc - —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å")
        print(f"  üíæ optimizer.py.backup - —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è")
        print(f"  ‚ùå optimizer.py - –∏—Å—Ö–æ–¥–Ω–∏–∫ —É–¥–∞–ª–µ–Ω")
        print()
        print("üõ°Ô∏è –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨:")
        print("  - –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ —Å–∫—Ä—ã—Ç –≤ –±–∞–π—Ç-–∫–æ–¥–µ")
        print("  - –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –æ–±—Ñ—É—Å—Ü–∏—Ä–æ–≤–∞–Ω–∞")
        print("  - main_back.py –æ—Å—Ç–∞–µ—Ç—Å—è —á–∏—Å—Ç—ã–º")
        print()
        print("üöÄ –°–õ–ï–î–£–Æ–©–ò–ô –®–ê–ì:")
        print("  –ó–∞–º–µ–Ω–∏—Ç–µ –≤–∞—à main_back.py –Ω–∞ –æ—á–∏—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏: {e}")
        return False


def restore_from_backup():
    """–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ optimizer.py –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"""
    backup_path = Path("optimizer.py.backup")

    if not backup_path.exists():
        print("‚ùå –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return False

    try:
        shutil.copy2(backup_path, "optimizer.py")
        print("‚úÖ optimizer.py –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è: {e}")
        return False


def clean_compiled_files():
    """–û—á–∏—Å—Ç–∫–∞ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    files_to_remove = [
        "optimizer.pyc",
        "__pycache__/optimizer.cpython-*.pyc"
    ]

    for pattern in files_to_remove:
        for file_path in Path(".").glob(pattern):
            try:
                file_path.unlink()
                print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω: {file_path}")
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å {file_path}: {e}")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    if len(sys.argv) > 1:
        command = sys.argv[1].lower()

        if command == "compile":
            compile_optimizer_to_pyc()
        elif command == "restore":
            restore_from_backup()
        elif command == "clean":
            clean_compiled_files()
        else:
            print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞")
            print_help()
    else:
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - –∫–æ–º–ø–∏–ª—è—Ü–∏—è
        compile_optimizer_to_pyc()


def print_help():
    """–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"""
    print("üîê –ö–û–ú–ü–ò–õ–Ø–¢–û–† OPTIMIZER MODULE")
    print("=" * 40)
    print()
    print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
    print("  python compile_optimizer.py [–∫–æ–º–∞–Ω–¥–∞]")
    print()
    print("–ö–æ–º–∞–Ω–¥—ã:")
    print("  compile  - –ö–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å optimizer.py –≤ .pyc (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)")
    print("  restore  - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å optimizer.py –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏")
    print("  clean    - –£–¥–∞–ª–∏—Ç—å —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã")
    print()
    print("–ü—Ä–∏–º–µ—Ä—ã:")
    print("  python compile_optimizer.py")
    print("  python compile_optimizer.py compile")
    print("  python compile_optimizer.py restore")
    print("  python compile_optimizer.py clean")


if __name__ == "__main__":
    main()

# ================================
# –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–´–ô –°–ü–û–°–û–ë –ö–û–ú–ü–ò–õ–Ø–¶–ò–ò
# ================================

"""
–†–£–ß–ù–ê–Ø –ö–û–ú–ü–ò–õ–Ø–¶–ò–Ø (–µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç):

1. –í Python –∫–æ–Ω—Å–æ–ª–∏:
   import py_compile
   py_compile.compile('optimizer.py', 'optimizer.pyc')

2. –£–¥–∞–ª–∏—Ç—å optimizer.py:
   import os
   os.remove('optimizer.py')

3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å:
   import optimizer
   print(hasattr(optimizer, 'run_system_optimization'))

–í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ò–ó BACKUP:
   import shutil
   shutil.copy2('optimizer.py.backup', 'optimizer.py')
"""

# ================================
# –ü–û–®–ê–ì–û–í–ê–Ø –ò–ù–°–¢–†–£–ö–¶–ò–Ø
# ================================

"""
üìã –ü–û–®–ê–ì–û–í–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê:

–®–ê–ì 1: –°–æ–∑–¥–∞—Ç—å optimizer.py
   - –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
   - –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∫–∞–∫ optimizer.py –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞

–®–ê–ì 2: –°–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å –≤ .pyc  
   python compile_optimizer.py

–®–ê–ì 3: –ó–∞–º–µ–Ω–∏—Ç—å main_back.py
   - –ó–∞–º–µ–Ω–∏—Ç–µ –≤–∞—à main_back.py –Ω–∞ –æ—á–∏—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
   - –ò–∑ –≤—Ç–æ—Ä–æ–≥–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞

–®–ê–ì 4: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—É
   python main_back.py

üîç –ü–†–û–í–ï–†–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò:
   - main_back.py –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å—Ç—ã–º
   - optimizer.py –¥–æ–ª–∂–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å  
   - optimizer.pyc –¥–æ–ª–∂–µ–Ω –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å
   - –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å

üö® –í –°–õ–£–ß–ê–ï –ü–†–û–ë–õ–ï–ú:
   python compile_optimizer.py restore
   # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç –∏—Å—Ö–æ–¥–Ω—ã–π optimizer.py
"""